<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-parent</artifactId>
    <version>56</version>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <artifactId>commons-statistics-parent</artifactId>
  <packaging>pom</packaging>
  <version>1.1-SNAPSHOT</version>
  <name>Apache Commons Statistics</name>

  <inceptionYear>2018</inceptionYear>
  <description>The Apache Commons Statistics project provides tools for statistics.</description>
  <url>https://commons.apache.org/proper/commons-statistics/</url>

  <issueManagement>
    <system>jira</system>
    <url>https://issues.apache.org/jira/browse/STATISTICS</url>
  </issueManagement>

  <scm>
    <connection>scm:git:http://gitbox.apache.org/repos/asf/commons-statistics.git</connection>
    <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/commons-statistics.git</developerConnection>
    <url>https://gitbox.apache.org/repos/asf?p=commons-statistics.git</url>
  </scm>

  <ciManagement>
    <system>GitHub</system>
    <url>https://github.com/apache/commons-statistics/actions</url>
  </ciManagement>

  <distributionManagement>
    <site>
      <id>apache.website</id>
      <name>Apache Commons Site</name>
      <url>scm:svn:https://svn.apache.org/repos/infra/websites/production/commons/content/proper/commons-statistics/</url>
    </site>
  </distributionManagement>

  <developers>
    <developer>
      <name>Gilles Sadowski</name>
      <id>erans</id>
      <email>erans at apache dot org</email>
    </developer>
    <developer>
      <name>Alex Herbert</name>
      <id>aherbert</id>
      <email>aherbert at apache dot org</email>
    </developer>
  </developers>

  <contributors>
    <contributor>
      <name>Ben Nguyen</name>
      <email>bennguyenib at gmail dot com</email>
    </contributor>
    <contributor>
      <name>Arturo Bernal</name>
    </contributor>
  </contributors>

  <properties>
    <!-- Do not change: "statistics" is the name of the component even if the
         name of the base package evolves with major release numbers
         (see "commons.osgi.symbolicName", below). -->
    <commons.componentid>statistics</commons.componentid>
    <!-- OSGi -->
    <!-- This value must reflect the current name of the base package. -->
    <commons.osgi.symbolicName>org.apache.commons.statistics</commons.osgi.symbolicName>
    <commons.osgi.export>org.apache.commons.statistics</commons.osgi.export>
    <!-- Java 9+ -->
    <commons.module.name>org.apache.commons.statistics</commons.module.name>
    <!-- This flag should only be true in the dist-archive module. -->
    <commons.release.isDistModule>false</commons.release.isDistModule>
    <!-- do not use snapshot suffix here -->
    <commons.release.version>1.1</commons.release.version>
    <commons.bc.version>1.0</commons.bc.version>
    <commons.rc.version>RC1</commons.rc.version>
    <commons.release.desc>(requires Java 8)</commons.release.desc>
    <commons.binary.suffix>-bin</commons.binary.suffix>

    <commons.jira.id>STATISTICS</commons.jira.id>
    <commons.jira.pid>12321632</commons.jira.pid>
    <commons.encoding>UTF-8</commons.encoding>
    <!-- JVM target version, in the newer JDK 9+ format. -->
    <jvm.target>8</jvm.target>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Workaround to avoid duplicating config files. -->
    <statistics.parent.dir>${basedir}</statistics.parent.dir>
    <!-- MathJax configuration also includes the prerequisite polyfill.min.js script.
         See the maven-javadoc-plugin plugin. -->
    <statistics.mathjax.url>https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js</statistics.mathjax.url>

    <!-- Increase from commons-parent -->
    <commons.jacoco.methodRatio>1.00</commons.jacoco.methodRatio>
    <commons.jacoco.haltOnFailure>true</commons.jacoco.haltOnFailure>

    <commons.site.path>statistics</commons.site.path>
    <commons.scmPubUrl>https://svn.apache.org/repos/infra/websites/production/commons/content/proper/commons-statistics</commons.scmPubUrl>
    <commons.scmPubCheckoutDirectory>site-content</commons.scmPubCheckoutDirectory>

    <!--
        Override so that "mvn commons:download-page" will generates a web page
        referring to the files created by the "dist-archive" module.
        Temporary workaround?
    -->
    <commons.release.name>commons-statistics-${project.version}</commons.release.name>
    <!-- MathJax script inclusion requires additional Javadoc qualifier for Java8 as of 8u121 -->
    <allowscript.javadoc.qualifier>--allow-script-in-comments</allowscript.javadoc.qualifier>
    <!-- Check for all javadoc errors -->
    <doclint.javadoc.qualifier>-Xdoclint:all</doclint.javadoc.qualifier>

    <!-- Dependency versions -->
    <statistics.commons.rng.version>1.5</statistics.commons.rng.version>
    <statistics.commons.numbers.version>1.1</statistics.commons.numbers.version>
    <statistics.commons.math3.version>3.6.1</statistics.commons.math3.version>

    <!-- Workaround to avoid the SVN site checkout in all modules.
         This flag should be deactivated by child modules. -->
    <perform.site.checkout>true</perform.site.checkout>

    <!-- Set by modules to create a custom jira report -->
    <statistics.jira.component />
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-rng-bom</artifactId>
        <version>${statistics.commons.rng.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-numbers-bom</artifactId>
        <version>${statistics.commons.numbers.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-math3</artifactId>
        <version>${statistics.commons.math3.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
     <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>clean verify javadoc:javadoc</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <compilerArgs>
            <arg>-Xlint:all,-options,-path</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive combine.children="append">
            <manifestEntries>
              <!-- Java 9+ -->
              <Automatic-Module-Name>${commons.module.name}</Automatic-Module-Name>
              <!-- Add entries from CP that are not inherited (for reasons unknown).
                   Replace ${implementation.build} property with the unique git build number. -->
              <Implementation-Vendor-Id>org.apache</Implementation-Vendor-Id>
              <Implementation-Build>${buildNumber}; ${maven.build.timestamp}</Implementation-Build>
              <X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
              <X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <configuration>
          <!-- buildnumber-maven-plugin:
            "for git getLastChangedRevision() returns null instead of the last revision"
            Override CP to use the last revision of the repository (OK for release jars). -->
          <useLastCommittedRevision>false</useLastCommittedRevision>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Fix for OpenJDK 8 now validating class-path attributes in Jar manifests. -->
          <!-- See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=912333#63 -->
          <useSystemClassLoader>false</useSystemClassLoader>
          <includes>
            <include>**/*Test.java</include>
          </includes>
          <excludes>
            <exclude>**/*AbstractTest.java</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <configuration>
          <ignorePathsToDelete>
            <ignorePathToDelete>javadocs</ignorePathToDelete>
          </ignorePathsToDelete>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${statistics.parent.dir}/src/conf/checkstyle/checkstyle.xml</configLocation>
          <headerLocation>${statistics.parent.dir}/src/conf/checkstyle/license-header.txt</headerLocation>
          <suppressionsLocation>${statistics.parent.dir}/src/conf/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
          <enableRulesSummary>false</enableRulesSummary>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <!-- Output the detected violations to the console (for checkstyle:check). -->
          <logViolationsToConsole>true</logViolationsToConsole>
          <failOnViolation>true</failOnViolation>
          <resourceExcludes>NOTICE,LICENSE,**/pom.properties,**/resolver-status.properties,**/sha512.properties</resourceExcludes>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <threshold>Normal</threshold>
          <effort>Default</effort>
          <excludeFilterFile>${statistics.parent.dir}/src/conf/spotbugs/spotbugs-exclude-filter.xml</excludeFilterFile>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
          <analysisCache>true</analysisCache>
          <rulesets>
            <ruleset>${statistics.parent.dir}/src/conf/pmd/pmd-ruleset.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <!-- Note: commons-parent binds the check goal to the validate phase -->
        <configuration>
          <!--  Should agree with apache-rat-plugin config under <build> -->
          <excludes combine.children="append">
            <!-- apache-rat-plugin uses .gitignore but does not exclude
                 development files recursively in sub-modules. -->
            <exclude>.ekstazi/**</exclude>
            <exclude>**/site-content/**</exclude>
            <exclude>**/.classpath</exclude>
            <exclude>**/.project</exclude>
            <exclude>**/.settings/**</exclude>
            <exclude>**/.checkstyle</exclude>
            <exclude>**/target/**</exclude>
            <exclude>src/site/resources/release-notes/RELEASE-NOTES-*.txt</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <!-- NOTE: javadoc config must also be set under <reporting> -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <!-- Java API links configured in commons-parent create redirect warnings on JDK 17
            and fail the build. The links are not required as detectJavaApiLink=true (default). -->
          <links combine.self="override">
            <link>https://commons.apache.org/proper/commons-rng/commons-rng-client-api/javadocs/api-${statistics.commons.rng.version}/</link>
          </links>
          <failOnWarnings>true</failOnWarnings>
          <!-- Enable MathJax -->
          <additionalOptions>${doclint.javadoc.qualifier} ${allowscript.javadoc.qualifier} -header '&lt;script src="https://polyfill.io/v3/polyfill.min.js?features=es6"&gt;&lt;/script&gt;&lt;script type="text/javascript" async src="${statistics.mathjax.url}"&gt;&lt;/script&gt;'</additionalOptions>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <skipAssembly>true</skipAssembly>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <configuration>
          <!--  Should agree with apache-rat-plugin config under <build> -->
          <excludes combine.children="append">
            <!-- version 0.8 of apache-rat-plugin does not exclude properly
                 some default development tools files (see RAT-126) -->
            <exclude>.ekstazi/**</exclude>
            <exclude>**/site-content/**</exclude>
            <exclude>**/.classpath</exclude>
            <exclude>**/.project</exclude>
            <exclude>**/.settings/**</exclude>
            <exclude>**/.checkstyle</exclude>
            <exclude>**/target/**</exclude>
            <exclude>src/site/resources/release-notes/RELEASE-NOTES-*.txt</exclude>
            <exclude>src/site/resources/txt/userguide/stress/**</exclude>
            <exclude>dist-archive/**</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <version>${commons.changes.version}</version>
        <configuration>
          <resolutionIds>Fixed,Implemented</resolutionIds>
          <statusIds>Resolved,Closed</statusIds>
          <!-- Don't include sub-task -->
          <typeIds>Bug,New Feature,Task,Improvement,Wish,Test</typeIds>
          <component>${statistics.jira.component}</component>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
              <report>jira-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>${statistics.parent.dir}/src/conf/checkstyle/checkstyle.xml</configLocation>
          <headerLocation>${statistics.parent.dir}/src/conf/checkstyle/license-header.txt</headerLocation>
          <suppressionsLocation>${statistics.parent.dir}/src/conf/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
          <enableRulesSummary>false</enableRulesSummary>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <logViolationsToConsole>false</logViolationsToConsole>
          <resourceExcludes>NOTICE,LICENSE,**/maven-archiver/pom.properties</resourceExcludes>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <configuration>
          <threshold>Normal</threshold>
          <effort>Default</effort>
          <excludeFilterFile>${statistics.parent.dir}/src/conf/spotbugs/spotbugs-exclude-filter.xml</excludeFilterFile>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <skipEmptyReport>false</skipEmptyReport>
          <analysisCache>true</analysisCache>
          <rulesets>
            <ruleset>${statistics.parent.dir}/src/conf/pmd/pmd-ruleset.xml</ruleset>
          </rulesets>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <!-- NOTE: javadoc config must also be set under <build> -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <!-- Java API links configured in commons-parent create redirect warnings on JDK 17
            and fail the build. The links are not required as detectJavaApiLink=true (default). -->
          <links combine.self="override">
            <link>https://commons.apache.org/proper/commons-rng/commons-rng-client-api/javadocs/api-${statistics.commons.rng.version}/</link>
          </links>
          <failOnWarnings>true</failOnWarnings>
          <!-- Enable MathJax -->
          <additionalOptions>${doclint.javadoc.qualifier} ${allowscript.javadoc.qualifier} -header '&lt;script src="https://polyfill.io/v3/polyfill.min.js?features=es6"&gt;&lt;/script&gt;&lt;script type="text/javascript" async src="${statistics.mathjax.url}"&gt;&lt;/script&gt;'</additionalOptions>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>compiler-release-property</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <properties>
        <!--
          The "release" compiler property (available in JDK 9+) must be set in order to generate
          binary-compatible artifacts for the target JVM. This flag sets the version of the platform
          APIs to compile against, which is necessary when building with a later JDK but targeting
          an earlier one. For example, use of the method reference new SplittableRandom()::nextInt
          must target the method in SplittableRandom and not java.util.random.RandomGenerator
          (added in JDK 17). If the release property is not set when compiling for Java 8, then the
          Java 17 method will be referenced in the bytecode, causing a runtime error when running on 8.
        -->
        <maven.compiler.release>${jvm.target}</maven.compiler.release>
      </properties>
    </profile>
    <profile>
      <!-- Override a parent property if the SVN site checkout should not be performed.
           This should activate for child modules. -->
      <id>is-child-module</id>
      <activation>
        <file>
          <missing>${basedir}/RELEASE-NOTES.txt</missing>
        </file>
      </activation>
      <properties>
        <perform.site.checkout>false</perform.site.checkout>
      </properties>
    </profile>
    <profile>
      <!-- Runs if the SVN site checkout does not exist.
           This is either obtained using svn (for the parent) or an empty directory is created. 
           The site-content directory is used when updating the live site. -->
      <id>site-checkout</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <!-- For multi-module builds, only the parent directory requires a site checkout.
                   This task will create an empty directory as the site checkout is missing. -->
              <execution>
                <id>empty-checkout</id>
                <phase>pre-site</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target name="empty-checkout" unless="${perform.site.checkout}">
                    <mkdir dir="${commons.scmPubCheckoutDirectory}" />
                    <echo file="${commons.scmPubCheckoutDirectory}${file.separator}README" message="The '${commons.scmPubCheckoutDirectory}' directory is empty in child modules." />
                  </target>
                </configuration>
              </execution>
              <!-- Checkout the top-level directory of the site using SVN. -->
              <execution>
                <id>prepare-checkout</id>
                <phase>pre-site</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target name="prepare-checkout" if="${perform.site.checkout}">
                    <!-- Top level directory -->
                    <exec executable="svn" failifexecutionfails="false">
                      <arg line="checkout --depth immediates ${commons.scmPubUrl} ${commons.scmPubCheckoutDirectory}" />
                    </exec>
                    <!-- Create the directory in the event that no svn exectuable is on the path -->
                    <mkdir dir="${commons.scmPubCheckoutDirectory}" />

                    <echo file="${commons.scmPubCheckoutDirectory}.README">The '${commons.scmPubCheckoutDirectory}' directory is controlled by "subversion".
Running "svn up" will download *all* the files of the live web site at
    https://commons.apache.org/statistics
This is avoided by creating an empty directory when svn is not available.
                    </echo>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- Allow the SVN site checkout to be removed in the clean phase. -->
      <id>clean-site-checkout</id>
      <activation>
        <file>
          <exists>${commons.scmPubCheckoutDirectory}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>remove-checkout</id>
                <phase>clean</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target name="remove-checkout">
                    <delete dir="${commons.scmPubCheckoutDirectory}" quiet="true" />
                    <delete file="${commons.scmPubCheckoutDirectory}.README" quiet="true" />
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Ekstazi (www.ekstazi.org) profile to optimize regression testing -->
    <profile>
      <id>ekstazi</id>
      <activation>
        <property>
          <name>ekstazi</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.ekstazi</groupId>
            <artifactId>ekstazi-maven-plugin</artifactId>
            <version>4.4.0</version>
            <configuration>
              <forcefailing>true</forcefailing>
            </configuration>
            <executions>
              <execution>
                <id>ekstazi</id>
                <goals>
                  <goal>select</goal>
                  <goal>restore</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <excludesFile>${java.io.tmpdir}/${user.name}EkstaziExcludes</excludesFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
        Profiles for modules with special requirements.
        These are combined with the existing <modules>.
    -->
    <profile>
      <id>examples</id>
      <modules>
        <module>commons-statistics-examples</module>
      </modules>
    </profile>

    <profile>
      <id>release</id>
      <modules>
        <!-- Examples are not part of the binary release so do not include in the build.
             Use the examples profile to create the site. -->
        <module>dist-archive</module>
      </modules>
    </profile>

  </profiles>

  <modules>
    <module>commons-statistics-distribution</module>
    <module>commons-statistics-ranking</module>
    <module>commons-statistics-inference</module>
    <module>commons-statistics-regression</module>
  </modules>

</project>
